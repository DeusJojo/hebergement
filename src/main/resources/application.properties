spring.application.name=hebergement

#Desactiver le docker compose.yml lors du lancement de l'application en local
spring.docker.compose.enabled=false

# Configuration de la bdd
spring.datasource.url=${JDBC_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# JPA / Hibernate Configuration
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuration du dialecte Hibernate pour PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#mise à jour du schema de la base de donnees lors du re-lancement de l'application si difference entre entite et bdd
#spring.jpa.hibernate.ddl-auto=update

# Afficher les requete SQL generes par Hibernate dans la console(optionnel)
spring.jpa.show-sql=true

# Désactive la validation JPA au niveau de la persistance pour éviter que les validations
# sur le mot de passe, ne soient appliquées après le hash du mot de passe (le hash ne respecte pas le REGEX)
# Cela permet de valider les champs lors de la soumission du formulaire et non lors de l'enregistrement dans la base de données.
spring.jpa.properties.javax.persistence.validation.mode=none

#debug
#logging.level.org.springframework=DEBUG

#server.servlet.context-path=/api

# augmenter la taille des fichiers que peut stocker sur le server
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

#JWT
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}